@page "/dashboard/{formId:int?}"
@model EmailCollector.Api.Pages.DashboardModel
@{
    ViewData["Title"] = "Dashboard";
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model.ErrorMessage
    </div>
}

<!-- Form Selection -->
<form method="post" class="form-container">
    <div class="form-group">
        <label for="formSelect" class="form-label">Select Form</label>
        <select id="formSelect" name="FormId" class="form-select">
            <option value="">-- Select Form --</option>
            @foreach (var form in Model.Forms)
            {
                <option value="@form.Id" selected="@(Model.FormId == form.Id.ToString() ? "selected" : null)">
                    @form.FormName
                </option>
            }
        </select>
    </div>

    <div class="form-row">
        <div class="form-group">
            <label for="startDate" class="form-label">Start Date</label>
            <input type="date" id="startDate" name="StartDate" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
        </div>
        <div class="form-group">
            <label for="endDate" class="form-label">End Date</label>
            <input type="date" id="endDate" name="EndDate" class="form-control" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary btn-block">Update</button>
</form>

<!-- Statistics Section -->
<h3 class="section-title">Form Statistics</h3>
<div class="row stats-section">
    <div class="col">
        <div class="card stats-card">
            <div class="card-header">Total Subscribers</div>
            <div class="card-body">
                <span class="stats-value">@Model.TotalSubscribers</span>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card stats-card">
            <div class="card-header">Form Status</div>
            <div class="card-body">
                <span class="stats-value">@Model.FormStatus</span>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card stats-card">
            <div class="card-header">Average Subs Per Day</div>
            <div class="card-body">
                <span class="stats-value">@Model.AvgSubsPerDay</span>
            </div>
        </div>
    </div>
</div>

<!-- Charts Section -->
<hr class="divider" />

<h3 class="section-title">Daily Subscriptions</h3>
<div class="chart-container">
    <canvas id="subsChart"></canvas>
</div>

<h3 class="section-title">Cumulative Subscriptions</h3>
<div class="chart-container">
    <canvas id="cumulativeSubsChart"></canvas>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            renderCharts();
        });

        function renderCharts() {
            const dates = @Json.Serialize(Model.Dates);
            const counts = @Json.Serialize(Model.Counts);
            const cumulativeCounts = @Json.Serialize(Model.CumulativeCounts);

            // Daily Subscriptions Chart
            const subsCtx = document.getElementById('subsChart').getContext('2d');
            new Chart(subsCtx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Daily Subscriptions',
                        data: counts,
                        borderColor: '#4793AF',
                        backgroundColor: 'rgba(71, 147, 175, 0.2)',
                        fill: true,
                    }]
                }
            });

            // Cumulative Subscriptions Chart
            const cumulativeCtx = document.getElementById('cumulativeSubsChart').getContext('2d');
            new Chart(cumulativeCtx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Cumulative Subscriptions',
                        data: cumulativeCounts,
                        borderColor: '#FF4D4D',
                        backgroundColor: 'rgba(255, 77, 77, 0.2)',
                        fill: true,
                    }]
                }
            });
        }
    </script>

    <!-- Add Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
}
