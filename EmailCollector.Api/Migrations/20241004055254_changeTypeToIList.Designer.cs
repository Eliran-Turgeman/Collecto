// <auto-generated />
using System;
using EmailCollector.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmailCollector.Api.Migrations
{
    [DbContext(typeof(EmailCollectorApiContext))]
    [Migration("20241004055254_changeTypeToIList")]
    partial class changeTypeToIList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("EmailCollector.Domain.Entities.EmailSignup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SignupDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SignupFormId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SignupFormId");

                    b.ToTable("EmailSignups");
                });

            modelBuilder.Entity("EmailCollector.Domain.Entities.SignupForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AllowedDomains")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SignupForms");
                });

            modelBuilder.Entity("EmailCollector.Domain.Entities.EmailSignup", b =>
                {
                    b.HasOne("EmailCollector.Domain.Entities.SignupForm", null)
                        .WithMany("EmailSignups")
                        .HasForeignKey("SignupFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmailCollector.Domain.Entities.SignupForm", b =>
                {
                    b.Navigation("EmailSignups");
                });
#pragma warning restore 612, 618
        }
    }
}
